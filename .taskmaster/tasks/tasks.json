{
  "master": {
    "tasks": [
      {
        "id": "1",
        "title": "Настройка подключения к Supabase",
        "description": "Настроить подключение к Supabase PostgreSQL и обновить конфигурацию Prisma",
        "status": "done",
        "priority": "high",
        "dependencies": [],
        "details": "Установить клиент Supabase, обновить переменные среды, настроить подключение к PostgreSQL через Prisma ORM. Обеспечить бесшовную миграцию с существующей SQLite базы.",
        "testStrategy": "Проверить подключение к базе данных, выполнить тестовые запросы, убедиться в корректной работе Prisma",
        "subtasks": [
          {
            "id": "1.1",
            "title": "Установка Supabase клиента",
            "description": "Установить @supabase/supabase-js пакет",
            "status": "done"
          },
          {
            "id": "1.2", 
            "title": "Обновление переменных среды",
            "description": "Добавить Supabase URL и ключи в .env файл",
            "status": "done"
          },
          {
            "id": "1.3",
            "title": "Создание Supabase клиента",
            "description": "Настроить клиент Supabase в lib/supabase.ts",
            "status": "done"
          },
          {
            "id": "1.4",
            "title": "Обновление Prisma конфигурации",
            "description": "Изменить provider с sqlite на postgresql",
            "status": "done"
          },
          {
            "id": "1.5",
            "title": "Тестовый API endpoint",
            "description": "Создать endpoint для проверки подключения",
            "status": "done"
          },
          {
            "id": "1.6",
            "title": "Получение пароля базы данных",
            "description": "Настроить правильный пароль для подключения к Supabase",
            "status": "pending"
          }
        ]
      },
            {
        "id": "2", 
        "title": "Миграция схемы базы данных на Supabase",
        "description": "✅ Создана полная схема PostgreSQL. ⚠️ Требует ручного применения SQL в Supabase Dashboard",
        "status": "done",
        "priority": "high",
        "dependencies": ["1"],
        "details": "Адаптировать существующую схему для PostgreSQL, добавить новые таблицы для векторных эмбеддингов, логов API и расширенных полей для разговоров и лидов.",
        "testStrategy": "Проверить применение миграций, корректность создания таблиц, индексов и связей",
        "subtasks": []
      },
      {
        "id": "3",
        "title": "Перенос данных из SQLite в Supabase", 
        "description": "Безопасно перенести все существующие данные в новую базу",
        "status": "pending",
        "priority": "high",
        "dependencies": ["2"],
        "details": "Создать скрипт миграции данных, обеспечить целостность данных, проверить корректность переноса всех записей пользователей, клиентов, агентов, разговоров и лидов.",
        "testStrategy": "Сравнить количество записей до и после миграции, проверить целостность данных",
        "subtasks": []
      },
      {
        "id": "4",
        "title": "Настройка ElevenLabs API клиента",
        "description": "Создать robustный клиент для работы с ElevenLabs Conversational AI API",
        "status": "done", 
        "priority": "high",
        "dependencies": [],
        "details": "Реализовать TypeScript клиент для ElevenLabs API с поддержкой разговоров, инструментов и базы знаний. Добавить обработку ошибок, retry логику и rate limiting.",
        "testStrategy": "Протестировать все методы API, обработку ошибок и retry механизмы",
        "subtasks": []
      },
      {
        "id": "5",
        "title": "Синхронизация разговоров с ElevenLabs", 
        "description": "Реализовать автоматическую синхронизацию разговоров из ElevenLabs",
        "status": "done",
        "priority": "high", 
        "dependencies": ["3", "4"],
        "details": "Создать сервис для периодической синхронизации разговоров, обработки транскриптов, извлечения метаданных и сохранения в Supabase. Реализовать real-time обновления.",
        "testStrategy": "Проверить автоматическую синхронизацию, корректность сохранения транскриптов",
        "subtasks": []
      },
      {
        "id": "6", 
        "title": "Улучшенный webhook для лидов",
        "description": "Расширить существующий webhook для захвата дополнительных данных лидов",
        "status": "pending",
        "priority": "high",
        "dependencies": ["3", "5"],
        "details": "Обновить webhook для обработки расширенных данных лидов из ElevenLabs, добавить извлечение контактной информации из транскриптов, реализовать scoring лидов.",
        "testStrategy": "Протестировать обработку webhook данных, извлечение контактов",
        "subtasks": []
      },
      {
        "id": "7",
        "title": "Система управления базой знаний",
        "description": "Создать систему для управления документами базы знаний с векторным поиском",
        "status": "pending",
        "priority": "medium",
        "dependencies": ["2"],
        "details": "Реализовать загрузку документов, генерацию векторных эмбеддингов, семантический поиск с использованием pgvector в Supabase. Интегрировать с ElevenLabs Knowledge Base API.",
        "testStrategy": "Проверить загрузку документов, генерацию эмбеддингов, качество поиска",
        "subtasks": []
      },
      {
        "id": "8",
        "title": "Админ интерфейс для базы знаний",
        "description": "Создать интерфейс администратора для управления документами базы знаний",
        "status": "pending",
        "priority": "medium", 
        "dependencies": ["7"],
        "details": "Разработать страницы для загрузки, редактирования и удаления документов, категоризации, тегирования и поиска по базе знаний в админ панели.",
        "testStrategy": "Протестировать все CRUD операции, UI/UX интерфейса",
        "subtasks": []
      },
      {
        "id": "9",
        "title": "Расширенная аналитика разговоров",
        "description": "Добавить детальную аналитику и отчеты по разговорам",
        "status": "pending",
        "priority": "medium",
        "dependencies": ["5"],
        "details": "Реализовать анализ настроений, извлечение тем, метрики качества разговоров, дашборд с визуализацией данных и экспорт отчетов.",
        "testStrategy": "Проверить корректность аналитических данных, работу дашборда",
        "subtasks": []
      },
      {
        "id": "10",
        "title": "Интеграция с внешними CRM системами",
        "description": "Настроить webhook интеграцию для передачи лидов в внешние CRM",
        "status": "pending",
        "priority": "low",
        "dependencies": ["6"],
        "details": "Реализовать настраиваемые webhook для отправки данных лидов в различные CRM системы, добавить mapping полей и retry логику.",
        "testStrategy": "Протестировать отправку данных в различные CRM системы",
        "subtasks": []
      },
      {
        "id": "11",
        "title": "Система мониторинга и логирования",
        "description": "Настроить комплексное логирование и мониторинг системы",
        "status": "pending",
        "priority": "medium",
        "dependencies": ["4", "5"],
        "details": "Реализовать логирование всех API вызовов, мониторинг производительности, алерты для критических ошибок, дашборд для отслеживания health системы.",
        "testStrategy": "Проверить корректность логирования, работу алертов",
        "subtasks": []
      },
      {
        "id": "12",
        "title": "Тестирование и оптимизация производительности",
        "description": "Провести полное тестирование и оптимизацию системы",
        "status": "pending",
        "priority": "medium",
        "dependencies": ["5", "6", "7", "9"],
        "details": "Выполнить unit и integration тесты, нагрузочное тестирование, оптимизацию запросов к базе данных и API вызовов, проверку безопасности.",
        "testStrategy": "Полный набор автоматических тестов, performance benchmarks",
        "subtasks": []
      }
    ],
    "metadata": {
      "createdAt": "2025-01-22T12:00:00Z",
      "description": "Миграция на Supabase и интеграция с ElevenLabs API для голосового агента",
      "totalTasks": 12
    }
  }
} 